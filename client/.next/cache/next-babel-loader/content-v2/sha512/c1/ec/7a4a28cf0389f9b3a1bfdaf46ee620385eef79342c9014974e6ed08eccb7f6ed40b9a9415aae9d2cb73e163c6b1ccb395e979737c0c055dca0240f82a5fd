{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ernest/Downloads/next-apollo-demo/client/components/Name.js\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst Name = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(NAME_QUERY);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error Occured\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data.loading ? \"..\" : data.name.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nexport const NAME_QUERY = gql`\n  query name {\n    name {\n      firstName\n      lastName\n    }\n  }\n`;\nexport default Name;","map":{"version":3,"sources":["/Users/ernest/Downloads/next-apollo-demo/client/components/Name.js"],"names":["gql","useQuery","Name","loading","error","data","NAME_QUERY","name","firstName"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACK,UAAD,CAAzC;AAEA,MAAIF,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE;AAAA,2BACE;AAAA,6BACE;AAAA,kBAAOE,IAAI,CAACF,OAAL,GAAe,IAAf,GAAsBE,IAAI,CAACE,IAAL,CAAUC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAbD;;AAeA,OAAO,MAAMF,UAAU,GAAGN,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;AASP,eAAeE,IAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\n\nconst Name = () => {\n  const { loading, error, data } = useQuery(NAME_QUERY);\n\n  if (error) return <div>Error Occured</div>;\n  if (loading) return <div>Loading ...</div>;\n\n  return (\n    <div>\n      <h1>\n        <span>{data.loading ? \"..\" : data.name.firstName}</span>\n      </h1>\n    </div>\n  );\n};\n\nexport const NAME_QUERY = gql`\n  query name {\n    name {\n      firstName\n      lastName\n    }\n  }\n`;\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}