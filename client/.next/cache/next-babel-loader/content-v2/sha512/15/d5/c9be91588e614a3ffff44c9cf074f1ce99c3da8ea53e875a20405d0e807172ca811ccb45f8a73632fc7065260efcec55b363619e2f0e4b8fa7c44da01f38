{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ernest/Downloads/next-apollo-demo/client/pages/NameList/NameList.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst NameList = ({\n  props\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(NAME_LIST_QUERY);\n  const classes = useStyles();\n  console.log(\"namelist\", data, \"loading\", loading, \"error\", props);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error Occured \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Person Cards \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), data.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Name: \", card.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Email: \", card.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Address: \", card.address.streetA, \" \", card.address.streetB, card.address.streetC, \" \", card.address.streetD, /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"City: \", card.address.city, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Country: \", card.address.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"ZipCode: \", card.address.zipcode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Phone:\", card.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default NameList;\nexport const NAME_LIST_QUERY = gql`\n  query cards {\n    cards {\n      name\n      email\n      phone\n      address {\n        streetA\n        streetB\n        streetC\n        streetD\n        city\n        country\n        zipcode\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/ernest/Downloads/next-apollo-demo/client/pages/NameList/NameList.js"],"names":["React","Grid","makeStyles","Paper","Typography","gql","useQuery","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","NameList","props","loading","error","data","NAME_LIST_QUERY","classes","console","log","cards","map","card","index","name","email","address","streetA","streetB","streetC","streetD","city","country","zipcode","phone"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst NameList = ({ props }) => {\n  const { loading, error, data } = useQuery(NAME_LIST_QUERY);\n  const classes = useStyles();\n\n  console.log(\"namelist\", data, \"loading\", loading, \"error\", props);\n\n  if (loading) return <div>Loading ...</div>;\n  if (error) return <div>Error Occured {error}</div>;\n\n  return (\n    <div className={classes.root}>\n      <h2>Person Cards </h2>\n      {data.cards.map((card, index) => (\n        <Grid\n          key={index}\n          container\n          direction='row'\n          justify='center'\n          alignItems='center'\n          spacing={2}\n        >\n          <Grid item md={6} xs={4}>\n            <Paper className={classes.paper}>\n              <Typography>Card</Typography>\n              <Typography>Name: {card.name}</Typography>\n              <Typography>Email: {card.email}</Typography>\n              <Typography>\n                Address: {card.address.streetA} {card.address.streetB}\n                {card.address.streetC} {card.address.streetD}\n                <Typography>City: {card.address.city} </Typography>\n                <Typography>Country: {card.address.country}</Typography>\n                <Typography>ZipCode: {card.address.zipcode}</Typography>\n              </Typography>\n              <Typography>Phone:{card.phone}</Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      ))}\n\n      <button>Load more</button>\n    </div>\n  );\n};\n\nexport default NameList;\n\nexport const NAME_LIST_QUERY = gql`\n  query cards {\n    cards {\n      name\n      email\n      phone\n      address {\n        streetA\n        streetB\n        streetC\n        streetD\n        city\n        country\n        zipcode\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}